@page "/"
@layout GuestLayout
@using MudBlazor
@using MenuFlix.Web.Client.Pages.Components
@using MudBlazor.Extensions

@inject ISessionStorageService sessionStorage
@inject NavigationManager nav
@inject IDialogService DialogService

<PageTitle>Index</PageTitle>

<MudContainer Class="mt-16 px-8" MaxWidth="MaxWidth.False">
    @if (true)
    {
        <MudItem xs="6">
            <MudPopup @ref="_popup" Open="@_open" Style="background-color: #c0392b " Text="Register your business now" Icon="@Icons.Material.Filled.Info" PopupPosition="MudExtensions.Enums.PopupPosition.Bottom" EnableAnimation>
                <ChildContent>
                    <MudStack Class="mud-width-full">
                        <div class="d-flex align-center">
                            <MudItem xs="12">
                                <MudStack Row Justify="Justify.SpaceBetween" AlignItems="AlignItems.Center">
                                    <MudIcon Icon="@Icons.Material.Filled.Info" Style="color: white;" />
                                    <MudText Typo="Typo.h6" Style="color: white;">Revolutionize your business and join us!</MudText>
                                    <MudButton Variant="Variant.Filled" Color="Color.Warning" OnClick="BusinessRegister">Sign Up My Business</MudButton>
                                    <MudIconButton Icon="@Icons.Material.Filled.Close" Style="color: white;" OnClick="@(() => _open = false)" />
                                </MudStack>
                            </MudItem>
                        </div>
                    </MudStack>
                </ChildContent>
            </MudPopup>
        </MudItem>
    }
    
    <MudGrid>        
        <MudItem xs="12">            
            <MudPaper Class="mud-width-full" Style="height:500px;">
            @* <MudImage Src="Images/carousel/1-min.jpg" Height="500" ObjectFit="ObjectFit.Cover" Class="card-img-top"> *@
                @* </MudImage> *@
                <MudExCardList HoverMode="MudExCardHoverMode.Zoom" TData="MudCard" >
                    <MudCard>
                        <MudCardHeader Style="z-index: 5">
                            <CardHeaderContent>
                                <MudText Typo="Typo.h6">Sample Headline</MudText>
                            </CardHeaderContent>
                            <CardHeaderActions>
                                <MudIconButton Icon="@Icons.Material.Filled.Favorite" Color="Color.Error" />
                            </CardHeaderActions>
                        </MudCardHeader>
                        <MudCardContent Style="z-index: 5">
                            <MudText>Super sample Content text.</MudText>
                            <MudText Typo="Typo.body2">Subline descriptin for sample card.</MudText>
                        </MudCardContent>
                        <MudCardActions Style="z-index: 5">
                            <MudButton Variant="Variant.Filled" Color="Color.Error">Read More</MudButton>
                        </MudCardActions>
                    </MudCard>
                </MudExCardList>
            </MudPaper>
                      
        </MudItem>
    </MudGrid>

    <MudGrid>
        <MudItem xs="12" sm="6" md="4">
            <MudExCardList HoverMode="MudExCardHoverMode.Zoom" TData="MudCard">
                <MudCard>
                    <MudCardHeader Style="z-index: 5">
                        <CardHeaderContent>
                            <MudText Typo="Typo.h6">Sample Headline</MudText>
                        </CardHeaderContent>
                        <CardHeaderActions>
                            <MudIconButton Icon="@Icons.Material.Filled.Favorite" Color="Color.Error" />
                        </CardHeaderActions>
                    </MudCardHeader>
                    <MudCardContent Style="z-index: 5">
                        <MudText>Super sample Content text.</MudText>
                        <MudText Typo="Typo.body2">Subline descriptin for sample card.</MudText>
                    </MudCardContent>
                    <MudCardActions Style="z-index: 5">
                        <MudButton Variant="Variant.Filled" Color="Color.Error">Read More</MudButton>
                    </MudCardActions>
                </MudCard>
            </MudExCardList>                       
        </MudItem>
        <MudItem xs="12" sm="6" md="4">
            <MudExCardList HoverMode="MudExCardHoverMode.Zoom" TData="MudCard">
                <MudCard>
                    <MudCardHeader Style="z-index: 5">
                        <CardHeaderContent>
                            <MudText Typo="Typo.h6">Sample Headline</MudText>
                        </CardHeaderContent>
                        <CardHeaderActions>
                            <MudIconButton Icon="@Icons.Material.Filled.Favorite" Color="Color.Error" />
                        </CardHeaderActions>
                    </MudCardHeader>
                    <MudCardContent Style="z-index: 5">
                        <MudText>Super sample Content text.</MudText>
                        <MudText Typo="Typo.body2">Subline descriptin for sample card.</MudText>
                    </MudCardContent>
                    <MudCardActions Style="z-index: 5">
                        <MudButton Variant="Variant.Filled" Color="Color.Error">Read More</MudButton>
                    </MudCardActions>
                </MudCard>
            </MudExCardList>
        </MudItem>
        <MudItem xs="12" sm="6" md="4">
            <MudExCardList HoverMode="MudExCardHoverMode.Zoom" TData="MudCard">
                <MudCard Style="width: 100%">
                    <MudCardHeader Style="z-index: 5">
                        <CardHeaderContent>
                            <MudText Typo="Typo.h6">Sample Headline</MudText>
                        </CardHeaderContent>
                        <CardHeaderActions>
                            <MudIconButton Icon="@Icons.Material.Filled.Favorite" Color="Color.Error" />
                        </CardHeaderActions>
                    </MudCardHeader>
                    <MudCardContent Style="z-index: 5">
                        <MudText>Super sample Content text.</MudText>
                        <MudText Typo="Typo.body2">Subline descriptin for sample card.</MudText>
                    </MudCardContent>
                    <MudCardActions Style="z-index: 5">
                        <MudButton Variant="Variant.Filled" Color="Color.Error">Read More</MudButton>
                    </MudCardActions>
                </MudCard>
            </MudExCardList>
        </MudItem>

        
       
       
       
    </MudGrid>

    <MudScrollToTop>
        <MudFab Color="Color.Error" StartIcon="@Icons.Material.Filled.ArrowCircleUp" />
    </MudScrollToTop>
</MudContainer>
@* <MudPaper Elevation="2" Class="pa-4" Style="height: 200px;">
                <MudStack Row>
                @foreach (var item in this.items)
                {

                    <MudItem md="6">
                        <CustomImage Src="@item.Src"
                                     Name="@item.Name"
                                     ShortName="@item.ShortName"
                                     OnClick="@(() => this.Click(item))" />
                    </MudItem>
                }
                </MudStack>
            </MudPaper> *@


@code {
    MudPopup _popup;
    bool _open = true;
    private bool firstLogin;
    public class Item
    {
        public string Name { get; set; }
        public string ShortName { get; set; }
        public string Src { get; set; }
    }
    private readonly List<Item> items = new()
            {
            new Item { Name = "Adobo", ShortName = "Adobong Manok", Src = "Images/carousel/1.jpg" },
            new Item { Name = "Sinigang", ShortName = "Sinigang na Pig", Src = "Images/carousel/2.jpg" }
            };

    private void Click(Item item)
    {
        Console.WriteLine($"Image: {item.Src}");
    }

    protected override async Task OnInitializedAsync()
    {
        string _sid = await sessionStorage.GetItemAsync<string>("_sid");
        firstLogin = string.IsNullOrEmpty(_sid) ? true : false;
    }   
    private void BusinessRegister()
    {
        var options = new DialogOptions
            {
                CloseButton = true,
                Position = DialogPosition.Center,                
                FullWidth = true,
                MaxWidth = MaxWidth.Medium,                
            };

        
        var dialog = DialogService.Show<BusinessSignUp>("", options);                
    }
}